[{"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\index.js":"1","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\App.js":"3","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\Admin\\Admin.js":"4","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Adminlogin.js":"5","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\User.js":"6","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Url.js":"7","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\Admin\\Menumanage.js":"8","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\Admin\\Uploadproduct.js":"9","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Home.js":"10","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Userlogin.js":"11","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Userregister.js":"12","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\ProductDetailsPage.js":"13","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\ProductShow.js":"14","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\ShowCase.js":"15","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\TopHeading.js":"16","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Header.js":"17","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Product.js":"18","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\MainSlider.js":"19"},{"size":521,"mtime":1613306015428,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1613306015430,"results":"22","hashOfConfig":"21"},{"size":604,"mtime":1613306015405,"results":"23","hashOfConfig":"21"},{"size":686,"mtime":1613306015415,"results":"24","hashOfConfig":"21"},{"size":3054,"mtime":1613306015420,"results":"25","hashOfConfig":"21"},{"size":2615,"mtime":1613306264807,"results":"26","hashOfConfig":"21"},{"size":61,"mtime":1613306015421,"results":"27","hashOfConfig":"21"},{"size":17249,"mtime":1613306015416,"results":"28","hashOfConfig":"21"},{"size":16919,"mtime":1613397187391,"results":"29","hashOfConfig":"21"},{"size":477,"mtime":1613306264674,"results":"30","hashOfConfig":"21"},{"size":2937,"mtime":1613306015423,"results":"31","hashOfConfig":"21"},{"size":7637,"mtime":1613306015425,"results":"32","hashOfConfig":"21"},{"size":2459,"mtime":1613306264705,"results":"33","hashOfConfig":"21"},{"size":2746,"mtime":1613401539749,"results":"34","hashOfConfig":"21"},{"size":2650,"mtime":1613306264734,"results":"35","hashOfConfig":"21"},{"size":241,"mtime":1613306264769,"results":"36","hashOfConfig":"21"},{"size":2664,"mtime":1613398448847,"results":"37","hashOfConfig":"21"},{"size":271,"mtime":1613397187416,"results":"38","hashOfConfig":"21"},{"size":2635,"mtime":1613306264676,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"kz1psw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\index.js",[],["87","88"],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\App.js",["89"],"import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Admin from \"./Component/Admin/Admin\";\r\nimport User from \"./Component/User/User\";\r\nimport Adminlogin from \"./Component/User/Adminlogin\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/admindashboard\" component={Admin} />\r\n          <Route path=\"/admin\" component={Adminlogin} />\r\n          <Route path=\"/\" component={User} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\Admin\\Admin.js",["90"],"import React, { Component } from \"react\";\r\nimport Uploadproduct from \"./Uploadproduct\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Menumanage from \"./Menumanage\";\r\nexport default class Admin extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <h1>admin dashboard</h1>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/uploadproduct\"\r\n            component={Uploadproduct}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/menumange\"\r\n            component={Menumanage}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Adminlogin.js",["91"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport \"./adminlogincss.css\";\r\nimport URL from \"./Url\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Adminlogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      mesg: \"\",\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  onchange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  notify = () => toast.error(this.state.mesg);\r\n  formsubmit = async (e) => {\r\n    const { username, password } = this.state;\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        `${URL}/login-admin`,\r\n        { username, password },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Cotent-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        localStorage.setItem(\"auth\", data.data.token);\r\n        localStorage.setItem(\"userrole\", data.data.role);\r\n        localStorage.setItem(\"username\", data.data.username);\r\n        this.props.history.push(\"/admindashboard\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ee\", err.response);\r\n        this.setState({ mesg: err.response.data.messege.msg });\r\n        this.notify();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper fadeInDown\">\r\n        <div id=\"formContent\">\r\n          {/* Tabs Titles */}\r\n          {/* Icon */}\r\n          <div className=\"fadeIn first\"></div>\r\n          {/* Login Form */}\r\n          <form onSubmit={this.formsubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"login\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn second\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn third\"\r\n              placeholder=\"password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"fadeIn fourth\"\r\n              defaultValue=\"Log In\"\r\n            />\r\n          </form>\r\n          <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n\r\n          <ToastContainer />\r\n          {/* Remind Passowrd */}\r\n          <div id=\"formFooter\">\r\n            <a className=\"underlineHover\" href=\"#\">\r\n              Forgot Password?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Adminlogin);\r\n","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\User.js",["92","93","94","95","96","97"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Switch, BrowserRouter, Router, Route, Link } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport ProductDetailsPage from './ProductDetailsPage';\r\nimport URL from './Url';\r\nimport './user.css';\r\nimport Userlogin from \"./Userlogin\";\r\nimport Userregister from \"./Userregister\";\r\nconst User = () => {\r\n  return (\r\n    <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/userregister\" component={Userregister} />\r\n          <Route exact path=\"/userlogin\" component={Userlogin} />\r\n          <Route exact path=\"/productDetails-Page\" component={ProductDetailsPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Switch, BrowserRouter, Router, Route, Link } from \"react-router-dom\";\r\n// import Userlogin from \"./Userlogin\";\r\n// import Userregister from \"./Userregister\";\r\n// import './user.css'\r\n// export default class User extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       toggleMenuBar:false,\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <BrowserRouter>\r\n//         <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n//           <div className=\"header\">\r\n//             <div className=\"header-wrapper\">\r\n//               <div className=\"header-item1\">\r\n//                 <div className=\"logo\">\r\n//                   hi\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"header-item2\">\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item1</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item2</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item3</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item4</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item5</li>\r\n//               </div>\r\n//               <div className=\"header-item3\">\r\n//                 bye\r\n//               </div>\r\n//             </div>\r\n//             {\r\n//               this.state.toggleMenuBar ? <div className=\"sub-header\"></div> : null\r\n//             }\r\n//           </div>\r\n          \r\n//         </div>\r\n//         <Switch>\r\n//           <Route path=\"/userregister\" component={Userregister} />\r\n//           <Route path=\"/userlogin\" component={Userlogin} />\r\n//         </Switch>\r\n//       </BrowserRouter>\r\n//     );\r\n//   }\r\n// }\r\n","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Url.js",[],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\Admin\\Menumanage.js",["98","99","100","101","102","103","104","105"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport URL from \"../User/Url\";\r\nimport \"./Menutemplate.css\";\r\nimport FlatList from \"flatlist-react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport Modal from \"react-modal\";\r\n\r\nexport default class Menumanage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      simplemenu: \"\",\r\n      dropdownholder: \"\",\r\n      megamenuholder: \"\",\r\n      submegamenu: \"\",\r\n      subdropdownmenu: \"\",\r\n      selecteddropdwnholder: \"\",\r\n      selectedmegadwnholder: \"\",\r\n      topCategory:false,\r\n      modalIsOpen: false,\r\n      menus: [],\r\n      oldCategory: \"\",\r\n      editableCategory: \"\",\r\n      oldsubcategory: \"\",\r\n      editableubdrop: \"\",\r\n    };\r\n  }\r\n  alertsubmit = (id) => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: async () => {\r\n            await axios.get(`${URL}/deletecategory/${id}`).then((data) => {\r\n              console.log(data);\r\n              this.componentDidMount();\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  megaMunuHolderalertsubmit = (id) => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: async () => {\r\n            await axios.get(`${URL}/deletemegaMunecategory/${id}`).then((data) => {\r\n              console.log(data);\r\n              this.componentDidMount();\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  onchange = (data) => {\r\n    this.setState({ [data.target.name]: data.target.value });\r\n  };\r\n  simplemenusub = async () => {\r\n    const { simplemenu,topCategory } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"simplemenu\", category: simplemenu ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"Menu aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n\r\n  dropdownholdersub = async () => {\r\n    const { dropdownholder,topCategory } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"dropdownmenuholder\", category: dropdownholder ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"dropdownmenu holder aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n\r\n  getmenus = async () => {\r\n    await axios.get(`${URL}/getmenus`).then((data) => {\r\n      this.setState({ menus: data.data });\r\n    });\r\n  };\r\n  megamenuholdersub = async () => {\r\n    const { megamenuholder ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"megamenuholder\", category: megamenuholder ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"Megamenu holder aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  selectdropdownholder = (e) => {\r\n    this.setState({ selecteddropdwnholder: e.target.value });\r\n  };\r\n  selectmegaholder = (e) => {\r\n    this.setState({ selectedmegadwnholder: e.target.value });\r\n  };\r\n\r\n  addsubdropdwn = async () => {\r\n    const { selecteddropdwnholder, subdropdownmenu ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/addsubdrop`,\r\n        { selecteddropdwnholder, subdropdownmenu,topCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        this.setState({ subdropdownmenu: \"\" });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  addsubMega = async () => {\r\n    const { selectedmegadwnholder, submegamenu ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/addsubMega`,\r\n        { selectedmegadwnholder, submegamenu ,topCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        this.setState({ submegamenu: \"\" });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  deletesubcategory = async (subcategory) => {\r\n    await axios\r\n      .post(\r\n        `${URL}/deletesubcategory`,\r\n        { subcategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.componentDidMount();\r\n      });\r\n  };\r\n  renderPerson = (person, idx) => {\r\n    return (\r\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\r\n        <b>{person.Name} </b>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={() => this.subcategoryedit(person.Name)}\r\n        >\r\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm ml-2\"\r\n          onClick={() => this.deletesubcategory(person.Name)}\r\n        >\r\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n  renderMegaMenu = (person, idx) => {\r\n    return (\r\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\r\n        <b>{person.Name} </b>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={() => this.subcategoryedit(person.Name)}\r\n        >\r\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm ml-2\"\r\n          onClick={() => this.deletesubcategory(person.Name)}\r\n        >\r\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getmenus();\r\n  }\r\n  subcategoryedit = (subcategory) => {\r\n    this.setState({\r\n      oldsubcategory: subcategory,\r\n      editableubdrop: subcategory,\r\n      modalIsOpen: true,\r\n    });\r\n  };\r\n  editAble = (cat) => {\r\n    this.setState({\r\n      oldCategory: cat,\r\n      editableCategory: cat,\r\n      modalIsOpen: true,\r\n    });\r\n  };\r\n  editCategory = async () => {\r\n    const { oldCategory,editableCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/editCategory`,\r\n        { oldCategory,editableCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.setState({ modalIsOpen: false });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  editsubdropdwn = async () => {\r\n    const { oldsubcategory, editableubdrop } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/editsubdrop`,\r\n        { oldsubcategory, editableubdrop },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.setState({ modalIsOpen: false });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  topCategorySet = ()=>{\r\n    this.setState({topCategory:!this.state.topCategory})\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onchange}\r\n            name=\"editableubdrop\"\r\n            value={this.state.editableubdrop}\r\n            placeholder=\"enter sub dropdown menu\"\r\n          ></input>\r\n          <button type=\"button\" onClick={this.editsubdropdwn}>\r\n            Add\r\n          </button>\r\n        </Modal>\r\n        {/* <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onchange}\r\n            name=\"editableCategory\"\r\n            value={this.state.editableCategory}\r\n            placeholder=\"update category\"\r\n          ></input>\r\n          <button type=\"button\" onClick={this.editCategory}>\r\n            Add\r\n          </button>\r\n        </Modal> */}\r\n        <div className=\"form-row \">\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"simplemenu\"\r\n              placeholder=\"Enter a simple menu\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.simplemenusub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"dropdownholder\"\r\n              placeholder=\"Enter Dropdownholder\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.dropdownholdersub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"megamenuholder\"\r\n              placeholder=\"Enter a Megamenuholder\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.megamenuholdersub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Select dropdownholder</label>\r\n            <select onChange={this.selectdropdownholder}>\r\n              <option value=\"0\"> Please select dropdownholder</option>\r\n              {this.state.menus.map((item, index) => {\r\n                if (item.Type == \"dropdownmenuholder\") {\r\n                  return (\r\n                    <option key={index} value={item.CategoryName}>\r\n                      {item.CategoryName}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            \r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onchange}\r\n              name=\"subdropdownmenu\"\r\n              value={this.state.subdropdownmenu}\r\n              placeholder=\"enter sub dropdown menu\"\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.addsubdropdwn}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Select Megamenu Holder</label>\r\n            <select onChange={this.selectmegaholder}>\r\n              <option value=\"0\"> Please select Megaholder</option>\r\n              {this.state.menus.map((item, index) => {\r\n                if (item.Type == \"megamenuholder\") {\r\n                  return (\r\n                    <option key={index} value={item.CategoryName}>\r\n                      {item.CategoryName}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              name=\"submegamenu\"\r\n              onChange={this.onchange}\r\n              value={this.state.submegamenu}\r\n              placeholder=\"Enter submegamenu\"\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.addsubMega}>Add</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h2>All Drop Menus</h2>\r\n        </div>\r\n        {this.state.menus.map((item, index) => {\r\n          if (item.Type === \"dropdownmenuholder\") {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                    {item.CategoryName}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={() =>\r\n                      this.editAble(item.CategoryName)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={() => this.alertsubmit(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <FlatList\r\n                    list={item.SubCategory}\r\n                    renderItem={this.renderPerson}\r\n                    renderWhenEmpty={() => (\r\n                      <div className=\"d-flex justify-content-center my-4\">\r\n                        You didn't add any sub category yet\r\n                      </div>\r\n                    )}\r\n                    display={{\r\n                      grid: true,\r\n                      minColumnWidth: \"5px\",\r\n                      gridGap: \"10px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        {this.state.menus.map((item, index) => {\r\n          if (item.Type === \"megamenuholder\") {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                    {item.CategoryName}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={() =>\r\n                      this.editAble(item.CategoryName)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={() => this.alertsubmit(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <FlatList\r\n                    list={item.SubCategory}\r\n                    renderItem={this.renderMegaMenu}\r\n                    renderWhenEmpty={() => (\r\n                      <div className=\"d-flex justify-content-center my-4\">\r\n                        You didn't add any sub category yet\r\n                      </div>\r\n                    )}\r\n                    display={{\r\n                      grid: true,\r\n                      minColumnWidth: \"5px\",\r\n                      gridGap: \"10px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        <h2>Top Categories</h2>\r\n                {\r\n                  this.state.menus.map((item, index)=>{\r\n                    if(item.topCategory){\r\n                      return(<h3 key={index}>{item.CategoryName}</h3>)\r\n                    }\r\n                  })\r\n                }\r\n                {\r\n                  this.state.menus.map((item, index)=>{\r\n                      return(\r\n                        <>\r\n                          {item.SubCategory.map((sub,index)=>{\r\n                            if(sub.topCategory){\r\n                              return(<h3 key={index}>{sub.Name}</h3>)\r\n                            }\r\n                          })}\r\n                        </>\r\n                        )\r\n                  })\r\n                }\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\Admin\\Uploadproduct.js",["106","107","108"],"import React, { Component } from \"react\";\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport URL, { sub } from \"../User/Url\";\r\nexport default class Uploadproduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      sub: [],\r\n      data: [],\r\n      brands: [{ name: \"Apple\" }, { name: \"Iphone\" }, { name: \"Shaomi\" }],\r\n      Images: [],\r\n      title: \"\",\r\n      skunumber: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      quantity: \"\",\r\n      weaight: \"\",\r\n      category: \"\",\r\n      subcategory: \"\",\r\n      brand: \"\",\r\n      discount: \"\",\r\n      stock: \"\",\r\n      shippingdetails: \"\",\r\n      manufacturesdetails: \"\",\r\n      selectedsize: [],\r\n      feature: false,\r\n      trend: false,\r\n      available: [{ name: \"L\" }, { name: \"X\" }, { name: \"M\" }],\r\n      image: \"\",\r\n    };\r\n  }\r\n\r\n  // onDrop = (files) => {\r\n  //   console.log(files[0]);\r\n\r\n  //   let formData = new FormData();\r\n  //   const config = {\r\n  //     header: { \"content-type\": \"multipart/form-data\" },\r\n  //   };\r\n  //   formData.append(\"file\", files[0]);\r\n  //   //save the Image we chose inside the Node Server\r\n  //   axios\r\n  //     .post(`${URL}/uploadImage`, formData, config)\r\n  //     .then((response) => {\r\n  //       if (response.data.success) {\r\n  //         this.setState({\r\n  //           Images: [...this.state.Images, response.data.image],\r\n  //         });\r\n  //       } else {\r\n  //         alert(\"Failed to save the Image in Server\");\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"hi\");\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  category = (e,t) =>{\r\n    console.log(t);\r\n    this.state.data.map(item => {\r\n      if(item.CategoryName === t.name && item.SubCategory.length > 0){\r\n        const get = item.SubCategory.map(subCat =>{\r\n          return(\r\n            {name:subCat.Name}\r\n          )\r\n        })\r\n        this.setState({sub:get})\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  // category = (selectedList, selectedItem) => {\r\n  //   this.setState({ category: selectedItem.name })\r\n  //   {\r\n  //     this.state.data.map(item => {\r\n  //       if (item.SubCategory.length > 0 && item.CategoryName === selectedItem.name) {\r\n  //         const SubCategory = item.SubCategory.map(itemm => {\r\n  //           return ({ name: itemm.Name })\r\n  //         })\r\n\r\n  //         this.setState({ sub: SubCategory });\r\n  //       }\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  updateContent(newContent) {\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  }\r\n  onChangedes = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      description: newContent,\r\n    });\r\n  };\r\n\r\n  onChangeship = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      shippingdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onChangemanu = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      manufacturesdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onBlur(evt) {\r\n    console.log(\"onBlur event called with event info: \", evt);\r\n  }\r\n\r\n  afterPaste(evt) {\r\n    console.log(\"afterPaste event called with event info: \", evt);\r\n  }\r\n  onDelete = (image) => {\r\n    const currentIndex = this.state.Images.indexOf(image);\r\n\r\n    let newImages = [...this.state.Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    this.setState({ Images: newImages });\r\n  };\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(`${URL}/getmenus`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((data) => {\r\n        this.setState({ data: data.data });\r\n        const category = data.data.map((item) => {\r\n          return { name: item.CategoryName };\r\n        });\r\n\r\n        this.setState({ options: category });\r\n      });\r\n  }\r\n\r\n  brand = (selectedList, selectedItem) => {\r\n    this.setState({ brand: selectedItem.name });\r\n  };\r\n\r\n  onSelect = (selectedList, selectedItem) => {\r\n    this.setState({ selectedsize: selectedList });\r\n  };\r\n\r\n  onChangeHandler = async (event) => {\r\n    // console.log(event.target.files[0]);\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.target.files[0]);\r\n\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    await axios\r\n      .post(`${URL}/uploadImage`, formData, config)\r\n      .then((response) => {\r\n        console.log(\"kk\", response);\r\n        if (response.data.success) {\r\n          this.setState({\r\n            Images: [...this.state.Images, response.data.image],\r\n          });\r\n        } else {\r\n          alert(\"Failed to save the Image in Server\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"hi\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  Change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  trend = (e) => {\r\n    this.setState({ trend: !this.state.trend });\r\n  };\r\n  feature = () => {\r\n    this.setState({ feature: !this.state.feature });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      title,\r\n      Images,\r\n      skunumber,\r\n      description,\r\n      price,\r\n      quantity,\r\n      weaight,\r\n      category,\r\n      subcategory,\r\n      brand,\r\n      discount,\r\n      stock,\r\n      shippingdetails,\r\n      manufacturesdetails,\r\n      selectedsize,\r\n      feature,\r\n      trend,\r\n    } = this.state;\r\n    axios\r\n      .post(\r\n        `${URL}/uploadProduct`,\r\n        {\r\n          title,\r\n          Images,\r\n          skunumber,\r\n          description,\r\n          price,\r\n          quantity,\r\n          weaight,\r\n          category,\r\n          subcategory,\r\n          brand,\r\n          discount,\r\n          stock,\r\n          shippingdetails,\r\n          manufacturesdetails,\r\n          selectedsize,\r\n          feature,\r\n          trend,\r\n        },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Successfully uploaded\");\r\n        } else {\r\n          alert(\"Faild to upload\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          {/* <Dropzone onDrop={this.onDrop} multiple={false} maxSize={800000000}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n                  border: \"1px solid lightgray\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                {console.log(\"getRootProps\", { ...getRootProps() })}\r\n                {console.log(\"getInputProps\", { ...getInputProps() })}\r\n                <input {...getInputProps()} />\r\n                <i className=\"fa fa-plus\" style={{ fontSize: \"3rem\" }}></i>\r\n                <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\r\n              </div>\r\n            )}\r\n          </Dropzone> */}\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"350px\",\r\n              height: \"240px\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n          >\r\n            {this.state.Images.map((image, index) => (\r\n              <div onClick={() => this.onDelete(image)}>\r\n                <img\r\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n                  src={`http://localhost:5000/${image}`}\r\n                  alt={`productImg-${index}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* {this.state.Images.map((image, index) => (\r\n          <div onClick={() => this.onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n          </div>\r\n        ))} */}\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Image</label>\r\n\r\n            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.Change}\r\n              value={this.state.title}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">SKU Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"skunumber\"\r\n              onChange={this.Change}\r\n              value={this.state.skunumber}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discription</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.description}\r\n              value={this.state.description}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangedes,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Price</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              onChange={this.Change}\r\n              value={this.state.price}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Price\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"quantity\"\r\n              onChange={this.Change}\r\n              value={this.state.quantity}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Weaight</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"weaight\"\r\n              onChange={this.Change}\r\n              value={this.state.weaight}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Category</label>\r\n            <Multiselect\r\n              options={this.state.options} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.category} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          {this.state.sub.length > 0 && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">Select Sub Category</label>\r\n              <Multiselect\r\n                options={this.state.sub} // Options to display in the dropdown\r\n                selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                onSelect={this.subcategory} // Function will trigger on select event\r\n                onRemove={this.onRemove} // Function will trigger on remove event\r\n                displayValue=\"name\" // Property name to display in the dropdown options\r\n                singleSelect=\"true\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Brand</label>\r\n            <Multiselect\r\n              options={this.state.brands} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.brand} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discount</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"discount\"\r\n              onChange={this.Change}\r\n              value={this.state.discount}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Discount\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Stock</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"stock\"\r\n              onChange={this.Change}\r\n              value={this.state.stock}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Stock\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Shipping DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.shippingdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangeship,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Manufactures DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.manufacturesdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangemanu,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select availabel Size</label>\r\n            <Multiselect\r\n              options={this.state.available} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedsize} // Preselected value to persist in dropdown\r\n              onSelect={this.onSelect} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"featured\"\r\n              onChange={this.feature}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Feature?\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"trend\"\r\n              onChange={this.trend}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Trend?\r\n            </label>\r\n          </div>\r\n\r\n          <div></div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Home.js",["109"],"import React from 'react';\r\nimport Header from './Header';\r\nimport ProductDetailsPage from './ProductDetailsPage';\r\nimport ProductShow from './ProductShow';\r\nimport ShowCase from './ShowCase';\r\nimport TopHeading from './TopHeading';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <TopHeading></TopHeading>\r\n            <ShowCase></ShowCase>\r\n            <ProductShow></ProductShow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Userlogin.js",[],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Userregister.js",[],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\ProductDetailsPage.js",[],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\ProductShow.js",["110","111","112"],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\ShowCase.js",["113"],"import React, { useState } from 'react';\r\nimport MainSlider from './MainSlider';\r\nimport './user.css'\r\nconst ShowCase = () => {\r\n    const [box,setBox] = useState(false)\r\n    const priceBox =() =>{\r\n\r\n    }\r\n    return (\r\n        <div id=\"showCase\">\r\n            <div className=\"showCase-wrapper\">\r\n                <div className=\"showCase-item1\">\r\n                    <div className=\"box\">\r\n                        <div className=\"sub-box\">\r\n                            <button type=\"button\" className=\"price-btn\" onClick={()=>setBox(!box)}>Price Filter</button>\r\n                            <input type=\"search\" name=\"search\" placeholder=\"Enter search item\" className=\"search-inp\"/>\r\n                        </div>\r\n                        {\r\n                            box ?\r\n                            <div className=\"dropBox\">\r\n                            <div>\r\n                                <input type=\"checkbox\" name=\"\" id=\"\"/>\r\n                                <label>0-50</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" name=\"\" id=\"\"/>\r\n                                <label>0-50</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" name=\"\" id=\"\"/>\r\n                                <label>0-50</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" name=\"\" id=\"\"/>\r\n                                <label>0-50</label>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"checkbox\" name=\"\" id=\"\"/>\r\n                                <label>0-50</label>\r\n                            </div>\r\n                        </div>\r\n                            :null\r\n                        }\r\n                    </div>\r\n                    <div className=\"top-cat\">\r\n                        <h2>Top Categories</h2>\r\n                        <div className=\"categories-item\">\r\n                            <ul>\r\n                                <li>Lorem ipsum dolor sit amet.</li>\r\n                                <li>Lorem ipsum dolor sit amet.</li>\r\n                                <li>Lorem ipsum dolor sit amet.</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"showCase-item2\">\r\n                    <MainSlider></MainSlider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowCase;","C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\TopHeading.js",[],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Header.js",["114","115","116"],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\Product.js",["117","118"],"C:\\Users\\kibria\\Documents\\GitHub\\e-com-new-project\\client\\src\\Component\\User\\MainSlider.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":33,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":3,"column":33,"nodeType":"125","messageId":"126","endLine":3,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":98,"column":13,"nodeType":"129","endLine":98,"endColumn":52},{"ruleId":"123","severity":1,"message":"130","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"131","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"132","line":2,"column":28,"nodeType":"125","messageId":"126","endLine":2,"endColumn":36},{"ruleId":"123","severity":1,"message":"124","line":3,"column":33,"nodeType":"125","messageId":"126","endLine":3,"endColumn":39},{"ruleId":"123","severity":1,"message":"133","line":3,"column":48,"nodeType":"125","messageId":"126","endLine":3,"endColumn":52},{"ruleId":"123","severity":1,"message":"134","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":11},{"ruleId":"135","severity":1,"message":"136","line":373,"column":51,"nodeType":"137","messageId":"138","endLine":373,"endColumn":53},{"ruleId":"139","severity":1,"message":"140","line":374,"column":31,"nodeType":"141","messageId":"142","endLine":374,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":401,"column":51,"nodeType":"137","messageId":"138","endLine":401,"endColumn":53},{"ruleId":"139","severity":1,"message":"140","line":402,"column":31,"nodeType":"141","messageId":"142","endLine":402,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":426,"column":45,"nodeType":"137","messageId":"138","endLine":426,"endColumn":47},{"ruleId":"135","severity":1,"message":"136","line":472,"column":45,"nodeType":"137","messageId":"138","endLine":472,"endColumn":47},{"ruleId":"135","severity":1,"message":"136","line":520,"column":53,"nodeType":"137","messageId":"138","endLine":520,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":530,"column":60,"nodeType":"137","messageId":"138","endLine":530,"endColumn":62},{"ruleId":"123","severity":1,"message":"143","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"144","line":6,"column":15,"nodeType":"125","messageId":"126","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"145","line":64,"column":30,"nodeType":"137","messageId":"146","endLine":64,"endColumn":32},{"ruleId":"123","severity":1,"message":"147","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":26},{"ruleId":"123","severity":1,"message":"148","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":15},{"ruleId":"123","severity":1,"message":"149","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":42,"column":7,"nodeType":"152","endLine":42,"endColumn":9,"suggestions":"153"},{"ruleId":"123","severity":1,"message":"154","line":6,"column":11,"nodeType":"125","messageId":"126","endLine":6,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":33,"column":42,"nodeType":"137","messageId":"138","endLine":33,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":42,"column":42,"nodeType":"137","messageId":"138","endLine":42,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":51,"column":42,"nodeType":"137","messageId":"138","endLine":51,"endColumn":44},{"ruleId":"123","severity":1,"message":"133","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"155","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":12},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'URL' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dropzone' is defined but never used.","'sub' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'ProductDetailsPage' is defined but never used.","'Product' is defined but never used.","'set' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllProduct', 'limit', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["158"],"'priceBox' is assigned a value but never used.","'man1' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [getAllProduct, limit, skip]",{"range":"161","text":"162"},[1381,1383],"[getAllProduct, limit, skip]"]