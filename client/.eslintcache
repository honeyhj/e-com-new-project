[{"E:\\e-com-new-project\\client\\src\\index.js":"1","E:\\e-com-new-project\\client\\src\\App.js":"2","E:\\e-com-new-project\\client\\src\\reportWebVitals.js":"3","E:\\e-com-new-project\\client\\src\\Component\\Admin\\Admin.js":"4","E:\\e-com-new-project\\client\\src\\Component\\User\\User.js":"5","E:\\e-com-new-project\\client\\src\\Component\\User\\Adminlogin.js":"6","E:\\e-com-new-project\\client\\src\\Component\\Admin\\Menumanage.js":"7","E:\\e-com-new-project\\client\\src\\Component\\Admin\\Uploadproduct.js":"8","E:\\e-com-new-project\\client\\src\\Component\\User\\Home.js":"9","E:\\e-com-new-project\\client\\src\\Component\\User\\ProductDetailsPage.js":"10","E:\\e-com-new-project\\client\\src\\Component\\User\\Url.js":"11","E:\\e-com-new-project\\client\\src\\Component\\User\\Userlogin.js":"12","E:\\e-com-new-project\\client\\src\\Component\\User\\Userregister.js":"13","E:\\e-com-new-project\\client\\src\\Component\\User\\ProductShow.js":"14","E:\\e-com-new-project\\client\\src\\Component\\User\\Header.js":"15","E:\\e-com-new-project\\client\\src\\Component\\User\\ShowCase.js":"16","E:\\e-com-new-project\\client\\src\\Component\\User\\TopHeading.js":"17","E:\\e-com-new-project\\client\\src\\Component\\User\\Product.js":"18","E:\\e-com-new-project\\client\\src\\Component\\User\\MainSlider.js":"19","E:\\e-com-new-project\\client\\src\\Reducers\\Rootreducer.js":"20","E:\\e-com-new-project\\client\\src\\Reducers\\ProductReducer.js":"21","E:\\e-com-new-project\\client\\src\\Actions\\Types.js":"22","E:\\e-com-new-project\\client\\src\\Actions\\Products.js":"23","E:\\e-com-new-project\\client\\src\\Actions\\ProductActions.js":"24","E:\\e-com-new-project\\client\\src\\Component\\User\\Productstore.js":"25"},{"size":897,"mtime":1614251390449,"results":"26","hashOfConfig":"27"},{"size":604,"mtime":1614249043765,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1614249043831,"results":"29","hashOfConfig":"27"},{"size":686,"mtime":1614249043769,"results":"30","hashOfConfig":"27"},{"size":2802,"mtime":1614350088585,"results":"31","hashOfConfig":"27"},{"size":3054,"mtime":1614249043773,"results":"32","hashOfConfig":"27"},{"size":17249,"mtime":1614249043770,"results":"33","hashOfConfig":"27"},{"size":16919,"mtime":1614249043772,"results":"34","hashOfConfig":"27"},{"size":629,"mtime":1614349000925,"results":"35","hashOfConfig":"27"},{"size":2459,"mtime":1614249043781,"results":"36","hashOfConfig":"27"},{"size":61,"mtime":1614253008124,"results":"37","hashOfConfig":"27"},{"size":2937,"mtime":1614249043786,"results":"38","hashOfConfig":"27"},{"size":7637,"mtime":1614249043788,"results":"39","hashOfConfig":"27"},{"size":3413,"mtime":1614336785928,"results":"40","hashOfConfig":"27"},{"size":3024,"mtime":1614350200944,"results":"41","hashOfConfig":"27"},{"size":3061,"mtime":1614345617986,"results":"42","hashOfConfig":"27"},{"size":241,"mtime":1614249043784,"results":"43","hashOfConfig":"27"},{"size":271,"mtime":1614249043780,"results":"44","hashOfConfig":"27"},{"size":2635,"mtime":1614249043779,"results":"45","hashOfConfig":"27"},{"size":177,"mtime":1614250424957,"results":"46","hashOfConfig":"27"},{"size":879,"mtime":1614253189990,"results":"47","hashOfConfig":"27"},{"size":144,"mtime":1614250424780,"results":"48","hashOfConfig":"27"},{"size":148,"mtime":1614250424779,"results":"49","hashOfConfig":"27"},{"size":734,"mtime":1614253264965,"results":"50","hashOfConfig":"27"},{"size":3030,"mtime":1614350909088,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"18sc4j5",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\e-com-new-project\\client\\src\\index.js",[],["111","112"],"E:\\e-com-new-project\\client\\src\\App.js",["113"],"import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Admin from \"./Component/Admin/Admin\";\r\nimport User from \"./Component/User/User\";\r\nimport Adminlogin from \"./Component/User/Adminlogin\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/admindashboard\" component={Admin} />\r\n          <Route path=\"/admin\" component={Adminlogin} />\r\n          <Route path=\"/\" component={User} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","E:\\e-com-new-project\\client\\src\\reportWebVitals.js",[],"E:\\e-com-new-project\\client\\src\\Component\\Admin\\Admin.js",["114"],"import React, { Component } from \"react\";\r\nimport Uploadproduct from \"./Uploadproduct\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Menumanage from \"./Menumanage\";\r\nexport default class Admin extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <h1>admin dashboard</h1>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/uploadproduct\"\r\n            component={Uploadproduct}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/menumange\"\r\n            component={Menumanage}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","E:\\e-com-new-project\\client\\src\\Component\\User\\User.js",["115","116","117","118","119","120"],"E:\\e-com-new-project\\client\\src\\Component\\User\\Adminlogin.js",["121"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport \"./adminlogincss.css\";\r\nimport URL from \"./Url\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Adminlogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      mesg: \"\",\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  onchange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  notify = () => toast.error(this.state.mesg);\r\n  formsubmit = async (e) => {\r\n    const { username, password } = this.state;\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        `${URL}/login-admin`,\r\n        { username, password },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Cotent-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        localStorage.setItem(\"auth\", data.data.token);\r\n        localStorage.setItem(\"userrole\", data.data.role);\r\n        localStorage.setItem(\"username\", data.data.username);\r\n        this.props.history.push(\"/admindashboard\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ee\", err.response);\r\n        this.setState({ mesg: err.response.data.messege.msg });\r\n        this.notify();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper fadeInDown\">\r\n        <div id=\"formContent\">\r\n          {/* Tabs Titles */}\r\n          {/* Icon */}\r\n          <div className=\"fadeIn first\"></div>\r\n          {/* Login Form */}\r\n          <form onSubmit={this.formsubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"login\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn second\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn third\"\r\n              placeholder=\"password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"fadeIn fourth\"\r\n              defaultValue=\"Log In\"\r\n            />\r\n          </form>\r\n          <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n\r\n          <ToastContainer />\r\n          {/* Remind Passowrd */}\r\n          <div id=\"formFooter\">\r\n            <a className=\"underlineHover\" href=\"#\">\r\n              Forgot Password?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Adminlogin);\r\n","E:\\e-com-new-project\\client\\src\\Component\\Admin\\Menumanage.js",["122","123","124","125","126","127","128","129"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport URL from \"../User/Url\";\r\nimport \"./Menutemplate.css\";\r\nimport FlatList from \"flatlist-react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport Modal from \"react-modal\";\r\n\r\nexport default class Menumanage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      simplemenu: \"\",\r\n      dropdownholder: \"\",\r\n      megamenuholder: \"\",\r\n      submegamenu: \"\",\r\n      subdropdownmenu: \"\",\r\n      selecteddropdwnholder: \"\",\r\n      selectedmegadwnholder: \"\",\r\n      topCategory:false,\r\n      modalIsOpen: false,\r\n      menus: [],\r\n      oldCategory: \"\",\r\n      editableCategory: \"\",\r\n      oldsubcategory: \"\",\r\n      editableubdrop: \"\",\r\n    };\r\n  }\r\n  alertsubmit = (id) => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: async () => {\r\n            await axios.get(`${URL}/deletecategory/${id}`).then((data) => {\r\n              console.log(data);\r\n              this.componentDidMount();\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  megaMunuHolderalertsubmit = (id) => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: async () => {\r\n            await axios.get(`${URL}/deletemegaMunecategory/${id}`).then((data) => {\r\n              console.log(data);\r\n              this.componentDidMount();\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  onchange = (data) => {\r\n    this.setState({ [data.target.name]: data.target.value });\r\n  };\r\n  simplemenusub = async () => {\r\n    const { simplemenu,topCategory } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"simplemenu\", category: simplemenu ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"Menu aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n\r\n  dropdownholdersub = async () => {\r\n    const { dropdownholder,topCategory } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"dropdownmenuholder\", category: dropdownholder ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"dropdownmenu holder aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n\r\n  getmenus = async () => {\r\n    await axios.get(`${URL}/getmenus`).then((data) => {\r\n      this.setState({ menus: data.data });\r\n    });\r\n  };\r\n  megamenuholdersub = async () => {\r\n    const { megamenuholder ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"megamenuholder\", category: megamenuholder ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"Megamenu holder aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  selectdropdownholder = (e) => {\r\n    this.setState({ selecteddropdwnholder: e.target.value });\r\n  };\r\n  selectmegaholder = (e) => {\r\n    this.setState({ selectedmegadwnholder: e.target.value });\r\n  };\r\n\r\n  addsubdropdwn = async () => {\r\n    const { selecteddropdwnholder, subdropdownmenu ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/addsubdrop`,\r\n        { selecteddropdwnholder, subdropdownmenu,topCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        this.setState({ subdropdownmenu: \"\" });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  addsubMega = async () => {\r\n    const { selectedmegadwnholder, submegamenu ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/addsubMega`,\r\n        { selectedmegadwnholder, submegamenu ,topCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        this.setState({ submegamenu: \"\" });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  deletesubcategory = async (subcategory) => {\r\n    await axios\r\n      .post(\r\n        `${URL}/deletesubcategory`,\r\n        { subcategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.componentDidMount();\r\n      });\r\n  };\r\n  renderPerson = (person, idx) => {\r\n    return (\r\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\r\n        <b>{person.Name} </b>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={() => this.subcategoryedit(person.Name)}\r\n        >\r\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm ml-2\"\r\n          onClick={() => this.deletesubcategory(person.Name)}\r\n        >\r\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n  renderMegaMenu = (person, idx) => {\r\n    return (\r\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\r\n        <b>{person.Name} </b>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={() => this.subcategoryedit(person.Name)}\r\n        >\r\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm ml-2\"\r\n          onClick={() => this.deletesubcategory(person.Name)}\r\n        >\r\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getmenus();\r\n  }\r\n  subcategoryedit = (subcategory) => {\r\n    this.setState({\r\n      oldsubcategory: subcategory,\r\n      editableubdrop: subcategory,\r\n      modalIsOpen: true,\r\n    });\r\n  };\r\n  editAble = (cat) => {\r\n    this.setState({\r\n      oldCategory: cat,\r\n      editableCategory: cat,\r\n      modalIsOpen: true,\r\n    });\r\n  };\r\n  editCategory = async () => {\r\n    const { oldCategory,editableCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/editCategory`,\r\n        { oldCategory,editableCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.setState({ modalIsOpen: false });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  editsubdropdwn = async () => {\r\n    const { oldsubcategory, editableubdrop } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/editsubdrop`,\r\n        { oldsubcategory, editableubdrop },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.setState({ modalIsOpen: false });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  topCategorySet = ()=>{\r\n    this.setState({topCategory:!this.state.topCategory})\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onchange}\r\n            name=\"editableubdrop\"\r\n            value={this.state.editableubdrop}\r\n            placeholder=\"enter sub dropdown menu\"\r\n          ></input>\r\n          <button type=\"button\" onClick={this.editsubdropdwn}>\r\n            Add\r\n          </button>\r\n        </Modal>\r\n        {/* <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onchange}\r\n            name=\"editableCategory\"\r\n            value={this.state.editableCategory}\r\n            placeholder=\"update category\"\r\n          ></input>\r\n          <button type=\"button\" onClick={this.editCategory}>\r\n            Add\r\n          </button>\r\n        </Modal> */}\r\n        <div className=\"form-row \">\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"simplemenu\"\r\n              placeholder=\"Enter a simple menu\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.simplemenusub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"dropdownholder\"\r\n              placeholder=\"Enter Dropdownholder\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.dropdownholdersub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"megamenuholder\"\r\n              placeholder=\"Enter a Megamenuholder\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.megamenuholdersub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Select dropdownholder</label>\r\n            <select onChange={this.selectdropdownholder}>\r\n              <option value=\"0\"> Please select dropdownholder</option>\r\n              {this.state.menus.map((item, index) => {\r\n                if (item.Type == \"dropdownmenuholder\") {\r\n                  return (\r\n                    <option key={index} value={item.CategoryName}>\r\n                      {item.CategoryName}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            \r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onchange}\r\n              name=\"subdropdownmenu\"\r\n              value={this.state.subdropdownmenu}\r\n              placeholder=\"enter sub dropdown menu\"\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.addsubdropdwn}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Select Megamenu Holder</label>\r\n            <select onChange={this.selectmegaholder}>\r\n              <option value=\"0\"> Please select Megaholder</option>\r\n              {this.state.menus.map((item, index) => {\r\n                if (item.Type == \"megamenuholder\") {\r\n                  return (\r\n                    <option key={index} value={item.CategoryName}>\r\n                      {item.CategoryName}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              name=\"submegamenu\"\r\n              onChange={this.onchange}\r\n              value={this.state.submegamenu}\r\n              placeholder=\"Enter submegamenu\"\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.addsubMega}>Add</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h2>All Drop Menus</h2>\r\n        </div>\r\n        {this.state.menus.map((item, index) => {\r\n          if (item.Type === \"dropdownmenuholder\") {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                    {item.CategoryName}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={() =>\r\n                      this.editAble(item.CategoryName)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={() => this.alertsubmit(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <FlatList\r\n                    list={item.SubCategory}\r\n                    renderItem={this.renderPerson}\r\n                    renderWhenEmpty={() => (\r\n                      <div className=\"d-flex justify-content-center my-4\">\r\n                        You didn't add any sub category yet\r\n                      </div>\r\n                    )}\r\n                    display={{\r\n                      grid: true,\r\n                      minColumnWidth: \"5px\",\r\n                      gridGap: \"10px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        {this.state.menus.map((item, index) => {\r\n          if (item.Type === \"megamenuholder\") {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                    {item.CategoryName}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={() =>\r\n                      this.editAble(item.CategoryName)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={() => this.alertsubmit(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <FlatList\r\n                    list={item.SubCategory}\r\n                    renderItem={this.renderMegaMenu}\r\n                    renderWhenEmpty={() => (\r\n                      <div className=\"d-flex justify-content-center my-4\">\r\n                        You didn't add any sub category yet\r\n                      </div>\r\n                    )}\r\n                    display={{\r\n                      grid: true,\r\n                      minColumnWidth: \"5px\",\r\n                      gridGap: \"10px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        <h2>Top Categories</h2>\r\n                {\r\n                  this.state.menus.map((item, index)=>{\r\n                    if(item.topCategory){\r\n                      return(<h3 key={index}>{item.CategoryName}</h3>)\r\n                    }\r\n                  })\r\n                }\r\n                {\r\n                  this.state.menus.map((item, index)=>{\r\n                      return(\r\n                        <>\r\n                          {item.SubCategory.map((sub,index)=>{\r\n                            if(sub.topCategory){\r\n                              return(<h3 key={index}>{sub.Name}</h3>)\r\n                            }\r\n                          })}\r\n                        </>\r\n                        )\r\n                  })\r\n                }\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n","E:\\e-com-new-project\\client\\src\\Component\\Admin\\Uploadproduct.js",["130","131","132"],"import React, { Component } from \"react\";\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport URL, { sub } from \"../User/Url\";\r\nexport default class Uploadproduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      sub: [],\r\n      data: [],\r\n      brands: [{ name: \"Apple\" }, { name: \"Iphone\" }, { name: \"Shaomi\" }],\r\n      Images: [],\r\n      title: \"\",\r\n      skunumber: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      quantity: \"\",\r\n      weaight: \"\",\r\n      category: \"\",\r\n      subcategory: \"\",\r\n      brand: \"\",\r\n      discount: \"\",\r\n      stock: \"\",\r\n      shippingdetails: \"\",\r\n      manufacturesdetails: \"\",\r\n      selectedsize: [],\r\n      feature: false,\r\n      trend: false,\r\n      available: [{ name: \"L\" }, { name: \"X\" }, { name: \"M\" }],\r\n      image: \"\",\r\n    };\r\n  }\r\n\r\n  // onDrop = (files) => {\r\n  //   console.log(files[0]);\r\n\r\n  //   let formData = new FormData();\r\n  //   const config = {\r\n  //     header: { \"content-type\": \"multipart/form-data\" },\r\n  //   };\r\n  //   formData.append(\"file\", files[0]);\r\n  //   //save the Image we chose inside the Node Server\r\n  //   axios\r\n  //     .post(`${URL}/uploadImage`, formData, config)\r\n  //     .then((response) => {\r\n  //       if (response.data.success) {\r\n  //         this.setState({\r\n  //           Images: [...this.state.Images, response.data.image],\r\n  //         });\r\n  //       } else {\r\n  //         alert(\"Failed to save the Image in Server\");\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"hi\");\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  category = (e,t) =>{\r\n    console.log(t);\r\n    this.state.data.map(item => {\r\n      if(item.CategoryName === t.name && item.SubCategory.length > 0){\r\n        const get = item.SubCategory.map(subCat =>{\r\n          return(\r\n            {name:subCat.Name}\r\n          )\r\n        })\r\n        this.setState({sub:get,category:t.name})\r\n      }\r\n    })\r\n    \r\n  }\r\n  subcategory = (e,t) =>{\r\n        this.setState({subcategory:t.name})\r\n  }\r\n\r\n\r\n  // category = (selectedList, selectedItem) => {\r\n  //   this.setState({ category: selectedItem.name })\r\n  //   {\r\n  //     this.state.data.map(item => {\r\n  //       if (item.SubCategory.length > 0 && item.CategoryName === selectedItem.name) {\r\n  //         const SubCategory = item.SubCategory.map(itemm => {\r\n  //           return ({ name: itemm.Name })\r\n  //         })\r\n\r\n  //         this.setState({ sub: SubCategory });\r\n  //       }\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  updateContent(newContent) {\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  }\r\n  onChangedes = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      description: newContent,\r\n    });\r\n  };\r\n\r\n  onChangeship = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      shippingdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onChangemanu = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      manufacturesdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onBlur(evt) {\r\n    console.log(\"onBlur event called with event info: \", evt);\r\n  }\r\n\r\n  afterPaste(evt) {\r\n    console.log(\"afterPaste event called with event info: \", evt);\r\n  }\r\n  onDelete = (image) => {\r\n    const currentIndex = this.state.Images.indexOf(image);\r\n\r\n    let newImages = [...this.state.Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    this.setState({ Images: newImages });\r\n  };\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(`${URL}/getmenus`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((data) => {\r\n        this.setState({ data: data.data });\r\n        const category = data.data.map((item) => {\r\n          return { name: item.CategoryName };\r\n        });\r\n\r\n        this.setState({ options: category });\r\n      });\r\n  }\r\n\r\n  brand = (selectedList, selectedItem) => {\r\n    this.setState({ brand: selectedItem.name });\r\n  };\r\n\r\n  onSelect = (selectedList, selectedItem) => {\r\n    this.setState({ selectedsize: selectedList });\r\n  };\r\n\r\n  onChangeHandler = async (event) => {\r\n    // console.log(event.target.files[0]);\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.target.files[0]);\r\n\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    await axios\r\n      .post(`${URL}/uploadImage`, formData, config)\r\n      .then((response) => {\r\n        console.log(\"kk\", response);\r\n        if (response.data.success) {\r\n          this.setState({\r\n            Images: [...this.state.Images, response.data.image],\r\n          });\r\n        } else {\r\n          alert(\"Failed to save the Image in Server\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"hi\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  Change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  trend = (e) => {\r\n    this.setState({ trend: !this.state.trend });\r\n  };\r\n  feature = () => {\r\n    this.setState({ feature: !this.state.feature });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      title,\r\n      Images,\r\n      skunumber,\r\n      description,\r\n      price,\r\n      quantity,\r\n      weaight,\r\n      category,\r\n      subcategory,\r\n      brand,\r\n      discount,\r\n      stock,\r\n      shippingdetails,\r\n      manufacturesdetails,\r\n      selectedsize,\r\n      feature,\r\n      trend,\r\n    } = this.state;\r\n    axios\r\n      .post(\r\n        `${URL}/uploadProduct`,\r\n        {\r\n          title,\r\n          Images,\r\n          skunumber,\r\n          description,\r\n          price,\r\n          quantity,\r\n          weaight,\r\n          category,\r\n          subcategory,\r\n          brand,\r\n          discount,\r\n          stock,\r\n          shippingdetails,\r\n          manufacturesdetails,\r\n          selectedsize,\r\n          feature,\r\n          trend,\r\n        },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Successfully uploaded\");\r\n        } else {\r\n          alert(\"Faild to upload\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          {/* <Dropzone onDrop={this.onDrop} multiple={false} maxSize={800000000}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n                  border: \"1px solid lightgray\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                {console.log(\"getRootProps\", { ...getRootProps() })}\r\n                {console.log(\"getInputProps\", { ...getInputProps() })}\r\n                <input {...getInputProps()} />\r\n                <i className=\"fa fa-plus\" style={{ fontSize: \"3rem\" }}></i>\r\n                <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\r\n              </div>\r\n            )}\r\n          </Dropzone> */}\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"350px\",\r\n              height: \"240px\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n          >\r\n            {this.state.Images.map((image, index) => (\r\n              <div onClick={() => this.onDelete(image)}>\r\n                <img\r\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n                  src={`http://localhost:5000/${image}`}\r\n                  alt={`productImg-${index}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* {this.state.Images.map((image, index) => (\r\n          <div onClick={() => this.onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n          </div>\r\n        ))} */}\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Image</label>\r\n\r\n            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.Change}\r\n              value={this.state.title}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">SKU Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"skunumber\"\r\n              onChange={this.Change}\r\n              value={this.state.skunumber}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discription</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.description}\r\n              value={this.state.description}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangedes,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Price</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              onChange={this.Change}\r\n              value={this.state.price}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Price\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"quantity\"\r\n              onChange={this.Change}\r\n              value={this.state.quantity}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Weaight</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"weaight\"\r\n              onChange={this.Change}\r\n              value={this.state.weaight}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Category</label>\r\n            <Multiselect\r\n              options={this.state.options} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.category} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          {this.state.sub.length > 0 && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">Select Sub Category</label>\r\n              <Multiselect\r\n                options={this.state.sub} // Options to display in the dropdown\r\n                selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                onSelect={this.subcategory} // Function will trigger on select event\r\n                onRemove={this.onRemove} // Function will trigger on remove event\r\n                displayValue=\"name\" // Property name to display in the dropdown options\r\n                singleSelect=\"true\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Brand</label>\r\n            <Multiselect\r\n              options={this.state.brands} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.brand} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discount</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"discount\"\r\n              onChange={this.Change}\r\n              value={this.state.discount}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Discount\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Stock</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"stock\"\r\n              onChange={this.Change}\r\n              value={this.state.stock}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Stock\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Shipping DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.shippingdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangeship,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Manufactures DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.manufacturesdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangemanu,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select availabel Size</label>\r\n            <Multiselect\r\n              options={this.state.available} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedsize} // Preselected value to persist in dropdown\r\n              onSelect={this.onSelect} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"featured\"\r\n              onChange={this.feature}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Feature?\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"trend\"\r\n              onChange={this.trend}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Trend?\r\n            </label>\r\n          </div>\r\n\r\n          <div></div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\e-com-new-project\\client\\src\\Component\\User\\Home.js",["133","134"],"E:\\e-com-new-project\\client\\src\\Component\\User\\ProductDetailsPage.js",[],"E:\\e-com-new-project\\client\\src\\Component\\User\\Url.js",[],"E:\\e-com-new-project\\client\\src\\Component\\User\\Userlogin.js",[],"E:\\e-com-new-project\\client\\src\\Component\\User\\Userregister.js",[],"E:\\e-com-new-project\\client\\src\\Component\\User\\ProductShow.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Product from './Product';\r\nimport './productShow.css';\r\nimport man1 from './img/man1.jpg';\r\nimport axios from 'axios';\r\nimport URL from './Url';\r\nimport { set } from 'mongoose';\r\nimport {connect} from 'react-redux'\r\nimport {fetchProduct} from '../../Actions/ProductActions'\r\nconst ProductShow = ({loading,allproducts,error,fetchProduct}) => {\r\n    const [products,setProducts] = useState([]);\r\n    const [psize,setpSize] = useState();\r\n    const [skip,setSkip] = useState(0);\r\n    const [limit,setLimit] = useState(8);\r\n    const [loadMores,setLoadMores] = useState(false);\r\n    const [kib,setLoadKib] = useState(false);\r\n\r\n    const getAllProduct = ()=>{\r\n        fetchProduct()\r\n    //   await  axios.post(`${URL}/get-products`,\r\n    //     {variables},{\r\n    //         headers:{\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Accept: \"application/json\",\r\n    //         }\r\n    //     })\r\n    //     .then(data=>{\r\n    //         if(data.data.success && loadMores){\r\n    //             console.log('loadmore true')\r\n    //             console.log(data.data.postSize);\r\n    //             const  update=products.concat(data.data.product)\r\n    //             setProducts(update)\r\n    //             setpSize(data.data.postSize)\r\n    //             setLoadMores(false)\r\n    //         }\r\n    //     else{\r\n    //             setProducts(data.data.product)\r\n    //             setpSize(data.data.postSize)\r\n    //             console.log(data.data.product);\r\n    //             setLoadMores(false)\r\n    //         }\r\n    //     })\r\n    }\r\n    useEffect(()=>{\r\n        getAllProduct()\r\n    },[])\r\n\r\n    // useEffect(()=>{\r\n    //     const variables = {skip,limit}\r\n    //     getAllProduct(variables)\r\n    // },[skip])\r\n    \r\n    const loadMore = ()=>{\r\n        setLoadMores(true)\r\n        setSkip(skip+8)\r\n        setLimit(8)\r\n    }\r\n        return (\r\n                    <div className=\"product-container\">\r\n            <h2>Featured Product</h2>\r\n            <div className=\"product-wrp\">\r\n\r\n                {allproducts.map((item,index)=>{\r\n                    return(\r\n                        <div key={index} className=\"product-show\">\r\n                        <div className=\"image\">\r\n                            <Link to=\"/productDetails-Page\">\r\n                            <img src={`http://localhost:5000/${item.Images[0]}`} alt=\"\"/>\r\n                            </Link>\r\n                        </div>\r\n                    <h3>{item.title}</h3>\r\n                    <p>gfdgdf</p>\r\n                        <div className=\"show-addCart\">\r\n                            <button type=\"button\" className=\"btn\">Add to cart</button>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n               \r\n            </div>\r\n            {\r\n                psize>=8 && (\r\n                     <div className=\"load-more\">\r\n                <button onClick={()=>loadMore()}>Load More And</button>\r\n            </div>\r\n                )\r\n            }\r\n        </div> \r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    loading:state.ProductReducer.loading,\r\n    allproducts:state.ProductReducer.products,\r\n    error:state.ProductReducer.error,\r\n    \r\n})\r\nexport default connect(mapStateToProps,{fetchProduct})(ProductShow);\r\n","E:\\e-com-new-project\\client\\src\\Component\\User\\Header.js",["149","150","151"],"E:\\e-com-new-project\\client\\src\\Component\\User\\ShowCase.js",["152","153","154"],"E:\\e-com-new-project\\client\\src\\Component\\User\\TopHeading.js",[],"E:\\e-com-new-project\\client\\src\\Component\\User\\Product.js",["155","156"],"import React from 'react';\r\nimport './productShow.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport man1 from './img/man1.jpg'\r\nconst Product = () => {\r\n    \r\n    return (\r\n        <div id=\"product\">\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","E:\\e-com-new-project\\client\\src\\Component\\User\\MainSlider.js",[],"E:\\e-com-new-project\\client\\src\\Reducers\\Rootreducer.js",[],"E:\\e-com-new-project\\client\\src\\Reducers\\ProductReducer.js",["157","158","159"],"import axios from 'axios';\r\nimport Products from '../Actions/Products'\r\nimport URL from '../Component/User/Url';\r\nimport * as types from '../Actions/Types'\r\nconst initialstate={\r\n    loading:false,\r\n    products:[],\r\n    error:\"\"\r\n}\r\nconst ProductReducer=(state=initialstate,action)=>{\r\nswitch (action.type){\r\n    case  types.PRODUCT_REQUEST:{\r\n        return {\r\n            ...state,\r\n            loading:true\r\n        }\r\n    }\r\n    case  types.PRODUCT_SUCCESS:{\r\n        console.log('pay',action.payload)\r\n        return {\r\n            ...state,\r\n            loading:false,\r\n            products:action.payload\r\n        }\r\n    }\r\n    case  types.PRODUCT_FAILURE:{\r\n        return {\r\n            ...state,\r\n            loading:false,\r\n            products:[],\r\n            error:action.payload\r\n        }\r\n    }\r\n    default:return state;\r\n}\r\n}\r\n\r\nexport default ProductReducer;","E:\\e-com-new-project\\client\\src\\Actions\\Types.js",[],"E:\\e-com-new-project\\client\\src\\Actions\\Products.js",[],"E:\\e-com-new-project\\client\\src\\Actions\\ProductActions.js",[],"E:\\e-com-new-project\\client\\src\\Component\\User\\Productstore.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":2,"column":33,"nodeType":"183","messageId":"184","endLine":2,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":3,"column":33,"nodeType":"183","messageId":"184","endLine":3,"endColumn":39},{"ruleId":"181","severity":1,"message":"185","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"186","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":26},{"ruleId":"181","severity":1,"message":"187","line":2,"column":28,"nodeType":"183","messageId":"184","endLine":2,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":3,"column":33,"nodeType":"183","messageId":"184","endLine":3,"endColumn":39},{"ruleId":"181","severity":1,"message":"188","line":3,"column":48,"nodeType":"183","messageId":"184","endLine":3,"endColumn":52},{"ruleId":"181","severity":1,"message":"189","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":11},{"ruleId":"190","severity":1,"message":"191","line":98,"column":13,"nodeType":"192","endLine":98,"endColumn":52},{"ruleId":"193","severity":1,"message":"194","line":373,"column":51,"nodeType":"195","messageId":"196","endLine":373,"endColumn":53},{"ruleId":"197","severity":1,"message":"198","line":374,"column":31,"nodeType":"199","messageId":"200","endLine":374,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":401,"column":51,"nodeType":"195","messageId":"196","endLine":401,"endColumn":53},{"ruleId":"197","severity":1,"message":"198","line":402,"column":31,"nodeType":"199","messageId":"200","endLine":402,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":426,"column":45,"nodeType":"195","messageId":"196","endLine":426,"endColumn":47},{"ruleId":"193","severity":1,"message":"194","line":472,"column":45,"nodeType":"195","messageId":"196","endLine":472,"endColumn":47},{"ruleId":"193","severity":1,"message":"194","line":520,"column":53,"nodeType":"195","messageId":"196","endLine":520,"endColumn":55},{"ruleId":"193","severity":1,"message":"194","line":530,"column":60,"nodeType":"195","messageId":"196","endLine":530,"endColumn":62},{"ruleId":"181","severity":1,"message":"201","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"202","line":6,"column":15,"nodeType":"183","messageId":"184","endLine":6,"endColumn":18},{"ruleId":"193","severity":1,"message":"203","line":64,"column":30,"nodeType":"195","messageId":"204","endLine":64,"endColumn":32},{"ruleId":"181","severity":1,"message":"205","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"206","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":26},{"ruleId":"181","severity":1,"message":"207","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"208","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"209","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":12},{"ruleId":"181","severity":1,"message":"185","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":13},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":11},{"ruleId":"181","severity":1,"message":"210","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"181","severity":1,"message":"211","line":12,"column":12,"nodeType":"183","messageId":"184","endLine":12,"endColumn":20},{"ruleId":"181","severity":1,"message":"212","line":12,"column":21,"nodeType":"183","messageId":"184","endLine":12,"endColumn":32},{"ruleId":"181","severity":1,"message":"213","line":13,"column":18,"nodeType":"183","messageId":"184","endLine":13,"endColumn":26},{"ruleId":"181","severity":1,"message":"214","line":15,"column":12,"nodeType":"183","messageId":"184","endLine":15,"endColumn":17},{"ruleId":"181","severity":1,"message":"215","line":16,"column":12,"nodeType":"183","messageId":"184","endLine":16,"endColumn":21},{"ruleId":"181","severity":1,"message":"216","line":17,"column":12,"nodeType":"183","messageId":"184","endLine":17,"endColumn":15},{"ruleId":"181","severity":1,"message":"217","line":17,"column":16,"nodeType":"183","messageId":"184","endLine":17,"endColumn":26},{"ruleId":"218","severity":1,"message":"219","line":47,"column":7,"nodeType":"220","endLine":47,"endColumn":9,"suggestions":"221"},{"ruleId":"193","severity":1,"message":"194","line":38,"column":42,"nodeType":"195","messageId":"196","endLine":38,"endColumn":44},{"ruleId":"193","severity":1,"message":"194","line":47,"column":42,"nodeType":"195","messageId":"196","endLine":47,"endColumn":44},{"ruleId":"193","severity":1,"message":"194","line":58,"column":42,"nodeType":"195","messageId":"196","endLine":58,"endColumn":44},{"ruleId":"181","severity":1,"message":"210","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"222","line":8,"column":12,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"223","line":9,"column":11,"nodeType":"183","messageId":"184","endLine":9,"endColumn":19},{"ruleId":"181","severity":1,"message":"188","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"209","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":12},{"ruleId":"181","severity":1,"message":"185","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"224","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":16},{"ruleId":"181","severity":1,"message":"189","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":11},{"ruleId":"181","severity":1,"message":"207","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"208","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"209","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":12},{"ruleId":"181","severity":1,"message":"185","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":13},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":11},{"ruleId":"181","severity":1,"message":"210","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"181","severity":1,"message":"211","line":12,"column":12,"nodeType":"183","messageId":"184","endLine":12,"endColumn":20},{"ruleId":"181","severity":1,"message":"212","line":12,"column":21,"nodeType":"183","messageId":"184","endLine":12,"endColumn":32},{"ruleId":"181","severity":1,"message":"213","line":13,"column":18,"nodeType":"183","messageId":"184","endLine":13,"endColumn":26},{"ruleId":"181","severity":1,"message":"214","line":15,"column":12,"nodeType":"183","messageId":"184","endLine":15,"endColumn":17},{"ruleId":"181","severity":1,"message":"215","line":16,"column":12,"nodeType":"183","messageId":"184","endLine":16,"endColumn":21},{"ruleId":"181","severity":1,"message":"216","line":17,"column":12,"nodeType":"183","messageId":"184","endLine":17,"endColumn":15},{"ruleId":"181","severity":1,"message":"217","line":17,"column":16,"nodeType":"183","messageId":"184","endLine":17,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":23,"column":39,"nodeType":"195","messageId":"196","endLine":23,"endColumn":41},{"ruleId":"193","severity":1,"message":"203","line":30,"column":39,"nodeType":"195","messageId":"204","endLine":30,"endColumn":41},{"ruleId":"193","severity":1,"message":"194","line":32,"column":45,"nodeType":"195","messageId":"196","endLine":32,"endColumn":47},{"ruleId":"218","severity":1,"message":"225","line":42,"column":7,"nodeType":"220","endLine":42,"endColumn":20,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'URL' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dropzone' is defined but never used.","'sub' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Header' is defined but never used.","'ProductDetailsPage' is defined but never used.","'Component' is defined but never used.","'Product' is defined but never used.","'man1' is defined but never used.","'set' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setpSize' is assigned a value but never used.","'limit' is assigned a value but never used.","'loadMores' is assigned a value but never used.","'kib' is assigned a value but never used.","'setLoadKib' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllProduct'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'product' is assigned a value but never used.","'priceBox' is assigned a value but never used.","'Products' is defined but never used.","React Hook useEffect has missing dependencies: 'allproducts' and 'category'. Either include them or remove the dependency array.",["230"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [getAllProduct]",{"range":"235","text":"236"},"Update the dependencies array to be: [allproducts, category, subcategory]",{"range":"237","text":"238"},[1732,1734],"[getAllProduct]",[1447,1460],"[allproducts, category, subcategory]"]